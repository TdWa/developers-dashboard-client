[{"/Users/oliver/Development/group-project/developers-dashboard-client/src/index.js":"1","/Users/oliver/Development/group-project/developers-dashboard-client/src/App.js":"2","/Users/oliver/Development/group-project/developers-dashboard-client/src/store/index.js":"3","/Users/oliver/Development/group-project/developers-dashboard-client/src/store/rootReducer.js":"4","/Users/oliver/Development/group-project/developers-dashboard-client/src/store/appState/reducer.js":"5","/Users/oliver/Development/group-project/developers-dashboard-client/src/store/appState/actions.js":"6","/Users/oliver/Development/group-project/developers-dashboard-client/src/components/Navbar.js":"7","/Users/oliver/Development/group-project/developers-dashboard-client/src/pages/Snippets.js":"8","/Users/oliver/Development/group-project/developers-dashboard-client/src/store/snippets/actions.js":"9","/Users/oliver/Development/group-project/developers-dashboard-client/src/config/constants.js":"10","/Users/oliver/Development/group-project/developers-dashboard-client/src/store/snippets/reducer.js":"11","/Users/oliver/Development/group-project/developers-dashboard-client/src/components/LoginForm.js":"12","/Users/oliver/Development/group-project/developers-dashboard-client/src/store/user/reducer.js":"13","/Users/oliver/Development/group-project/developers-dashboard-client/src/store/categories/reducer.js":"14","/Users/oliver/Development/group-project/developers-dashboard-client/src/store/user/actions.js":"15","/Users/oliver/Development/group-project/developers-dashboard-client/src/store/categories/actions.js":"16","/Users/oliver/Development/group-project/developers-dashboard-client/src/store/user/selectors.js":"17","/Users/oliver/Development/group-project/developers-dashboard-client/src/components/CodeSnippetCard.js":"18","/Users/oliver/Development/group-project/developers-dashboard-client/src/store/links/reducer.js":"19","/Users/oliver/Development/group-project/developers-dashboard-client/src/pages/Links.js":"20","/Users/oliver/Development/group-project/developers-dashboard-client/src/store/links/actions.js":"21","/Users/oliver/Development/group-project/developers-dashboard-client/src/components/LinkCard.js":"22","/Users/oliver/Development/group-project/developers-dashboard-client/src/pages/Login.js":"23","/Users/oliver/Development/group-project/developers-dashboard-client/src/pages/Signup.js":"24","/Users/oliver/Development/group-project/developers-dashboard-client/src/components/SignupForm.js":"25","/Users/oliver/Development/group-project/developers-dashboard-client/src/components/Toolbar.js":"26","/Users/oliver/Development/group-project/developers-dashboard-client/src/components/AddCategory.js":"27","/Users/oliver/Development/group-project/developers-dashboard-client/src/store/categories/selectors.js":"28","/Users/oliver/Development/group-project/developers-dashboard-client/src/components/AddLink.js":"29","/Users/oliver/Development/group-project/developers-dashboard-client/src/components/AddSnippet.js":"30","/Users/oliver/Development/group-project/developers-dashboard-client/src/components/ClipBoard.js":"31","/Users/oliver/Development/group-project/developers-dashboard-client/src/utils/useCopyToClipboard.js":"32","/Users/oliver/Development/group-project/developers-dashboard-client/src/components/MessageBox.js":"33","/Users/oliver/Development/group-project/developers-dashboard-client/src/pages/Search.js":"34","/Users/oliver/Development/group-project/developers-dashboard-client/src/store/links/selectors.js":"35","/Users/oliver/Development/group-project/developers-dashboard-client/src/store/snippets/selectors.js":"36","/Users/oliver/Development/group-project/developers-dashboard-client/src/components/Message.js":"37","/Users/oliver/Development/group-project/developers-dashboard-client/src/store/appState/selectors.js":"38"},{"size":375,"mtime":1607425310117,"results":"39","hashOfConfig":"40"},{"size":1462,"mtime":1607584374429,"results":"41","hashOfConfig":"40"},{"size":373,"mtime":1607425310118,"results":"42","hashOfConfig":"40"},{"size":339,"mtime":1607425310119,"results":"43","hashOfConfig":"40"},{"size":595,"mtime":1607530006337,"results":"44","hashOfConfig":"40"},{"size":869,"mtime":1607584374435,"results":"45","hashOfConfig":"40"},{"size":2929,"mtime":1607584374432,"results":"46","hashOfConfig":"40"},{"size":2652,"mtime":1607584374434,"results":"47","hashOfConfig":"40"},{"size":5265,"mtime":1607584374436,"results":"48","hashOfConfig":"40"},{"size":92,"mtime":1607530006335,"results":"49","hashOfConfig":"40"},{"size":1617,"mtime":1607584374436,"results":"50","hashOfConfig":"40"},{"size":1673,"mtime":1607585857844,"results":"51","hashOfConfig":"40"},{"size":607,"mtime":1607431241426,"results":"52","hashOfConfig":"40"},{"size":724,"mtime":1607584374435,"results":"53","hashOfConfig":"40"},{"size":3249,"mtime":1607584374437,"results":"54","hashOfConfig":"40"},{"size":1547,"mtime":1607584374435,"results":"55","hashOfConfig":"40"},{"size":105,"mtime":1607425310120,"results":"56","hashOfConfig":"40"},{"size":6140,"mtime":1607584374430,"results":"57","hashOfConfig":"40"},{"size":899,"mtime":1607584374436,"results":"58","hashOfConfig":"40"},{"size":2334,"mtime":1607584374432,"results":"59","hashOfConfig":"40"},{"size":2756,"mtime":1607584374436,"results":"60","hashOfConfig":"40"},{"size":2035,"mtime":1607584374430,"results":"61","hashOfConfig":"40"},{"size":674,"mtime":1607585904807,"results":"62","hashOfConfig":"40"},{"size":529,"mtime":1607584374434,"results":"63","hashOfConfig":"40"},{"size":1872,"mtime":1607586913163,"results":"64","hashOfConfig":"40"},{"size":1993,"mtime":1607584374432,"results":"65","hashOfConfig":"40"},{"size":985,"mtime":1607584374429,"results":"66","hashOfConfig":"40"},{"size":221,"mtime":1607584374435,"results":"67","hashOfConfig":"40"},{"size":2467,"mtime":1607584374429,"results":"68","hashOfConfig":"40"},{"size":2816,"mtime":1607584374429,"results":"69","hashOfConfig":"40"},{"size":438,"mtime":1607530006332,"results":"70","hashOfConfig":"40"},{"size":802,"mtime":1607442265019,"results":"71","hashOfConfig":"40"},{"size":301,"mtime":1607530006334,"results":"72","hashOfConfig":"40"},{"size":4228,"mtime":1607584374433,"results":"73","hashOfConfig":"40"},{"size":191,"mtime":1607530006340,"results":"74","hashOfConfig":"40"},{"size":209,"mtime":1607530006341,"results":"75","hashOfConfig":"40"},{"size":1789,"mtime":1607584374432,"results":"76","hashOfConfig":"40"},{"size":134,"mtime":1607530006338,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1tkg9md",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"80"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"80"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"80"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"80"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/oliver/Development/group-project/developers-dashboard-client/src/index.js",[],["159","160"],"/Users/oliver/Development/group-project/developers-dashboard-client/src/App.js",[],"/Users/oliver/Development/group-project/developers-dashboard-client/src/store/index.js",[],"/Users/oliver/Development/group-project/developers-dashboard-client/src/store/rootReducer.js",[],"/Users/oliver/Development/group-project/developers-dashboard-client/src/store/appState/reducer.js",[],"/Users/oliver/Development/group-project/developers-dashboard-client/src/store/appState/actions.js",[],"/Users/oliver/Development/group-project/developers-dashboard-client/src/components/Navbar.js",[],"/Users/oliver/Development/group-project/developers-dashboard-client/src/pages/Snippets.js",[],"/Users/oliver/Development/group-project/developers-dashboard-client/src/store/snippets/actions.js",[],"/Users/oliver/Development/group-project/developers-dashboard-client/src/config/constants.js",[],"/Users/oliver/Development/group-project/developers-dashboard-client/src/store/snippets/reducer.js",[],"/Users/oliver/Development/group-project/developers-dashboard-client/src/components/LoginForm.js",["161","162"],"/Users/oliver/Development/group-project/developers-dashboard-client/src/store/user/reducer.js",[],"/Users/oliver/Development/group-project/developers-dashboard-client/src/store/categories/reducer.js",[],"/Users/oliver/Development/group-project/developers-dashboard-client/src/store/user/actions.js",[],"/Users/oliver/Development/group-project/developers-dashboard-client/src/store/categories/actions.js",[],"/Users/oliver/Development/group-project/developers-dashboard-client/src/store/user/selectors.js",[],"/Users/oliver/Development/group-project/developers-dashboard-client/src/components/CodeSnippetCard.js",["163","164"],"import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { a11yDark } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  editCodeSnippet,\n  deleteSnippet,\n  editCommentSnippet,\n} from \"../store/snippets/actions\";\nimport TextField from \"@material-ui/core/TextField\";\nimport ClipBoard from \"./ClipBoard\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      maxWidth: 450,\n    },\n  },\n  media: {\n    height: 140,\n  },\n}));\n\nconst CodeSnippetCard = (props) => {\n  const dispatch = useDispatch();\n  const [editMode, setEditMode] = useState(false);\n  const [editCommentMode, setEditCommentMode] = useState(false);\n  const [editText, setEditText] = useState(\"\");\n  const [editCommentText, setEditCommentText] = useState(\"\");\n\n  // console.log(\"i am edit text,\", editText);\n  // console.log(\"i am id,\", props.id);\n\n  function editSnippet() {\n    // console.log(\"snippet id\", props.id);\n    dispatch(editCodeSnippet(editText, props.id));\n    setEditMode(false);\n  }\n  function editSnippetComment() {\n    console.log(\"snippet id\", props.id);\n    dispatch(editCommentSnippet(editCommentText, props.id));\n    setEditCommentMode(false);\n  }\n  const onDelete = (id) => {\n    // console.log(\"deleting snippet!\", id);\n\n    dispatch(deleteSnippet(id));\n  };\n\n  const classes = useStyles();\n  return (\n    <div>\n      <Card className={classes.root}>\n        {/* <CardActionArea> */}\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {props.name}\n          </Typography>\n          {!editMode ? (\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n              component=\"span\"\n              className={classes.media}\n            >\n              <SyntaxHighlighter\n                language=\"js\"\n                style={a11yDark}\n                children={props.content}\n                showLineNumbers={true}\n              />\n              <ClipBoard code={props.content} />\n            </Typography>\n          ) : (\n            <div>\n              <Typography\n                variant=\"body2\"\n                color=\"textSecondary\"\n                component=\"span\"\n                className={classes.media}\n              >\n                <TextField\n                  id=\"outlined-basic\"\n                  label=\"Snippet\"\n                  variant=\"outlined\"\n                  multiline\n                  defaultValue={props.content}\n                  onChange={(event) => setEditText(event.target.value)}\n                />\n              </Typography>\n              <Button\n                size=\"small\"\n                color=\"primary\"\n                onClick={() => {\n                  editSnippet();\n                }}\n              >\n                save\n              </Button>\n            </div>\n          )}\n          {!editCommentMode ? (\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {props.comment}\n            </Typography>\n          ) : (\n            <div>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                <TextField\n                  id=\"outlined-basic\"\n                  label=\"Comment\"\n                  variant=\"outlined\"\n                  defaultValue={props.comment}\n                  onChange={(event) => setEditCommentText(event.target.value)}\n                />\n              </Typography>\n              <Button\n                size=\"small\"\n                color=\"primary\"\n                onClick={() => {\n                  editSnippetComment();\n                }}\n              >\n                save\n              </Button>\n            </div>\n          )}\n        </CardContent>\n        {/* </CardActionArea> */}\n        <CardActions>\n          <Button\n            size=\"small\"\n            color=\"primary\"\n            onClick={() => {\n              setEditCommentMode(!editCommentMode);\n            }}\n          >\n            edit comment\n          </Button>\n\n          <Button\n            size=\"small\"\n            color=\"primary\"\n            onClick={() => {\n              onDelete(props.id);\n            }}\n          >\n            remove snippet\n          </Button>\n          <Button\n            size=\"small\"\n            color=\"primary\"\n            onClick={() => {\n              setEditMode(!editMode);\n            }}\n          >\n            edit snippet\n          </Button>\n        </CardActions>\n      </Card>\n    </div>\n  );\n};\n\nexport default CodeSnippetCard;\n","/Users/oliver/Development/group-project/developers-dashboard-client/src/store/links/reducer.js",[],"/Users/oliver/Development/group-project/developers-dashboard-client/src/pages/Links.js",["165"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllLinks } from \"../store/links/actions\";\nimport { selectAllLinks } from \"../store/links/selector\";\nimport LinkCard from \"../components/LinkCard\";\n\nimport { Grid } from \"@material-ui/core\";\nimport Toolbar from \"../components/Toolbar\";\n\nimport AddLink from \"../components/AddLink\";\nimport { selectCategories } from \"../store/categories/selectors\";\n\nconst Links = () => {\n  const dispatch = useDispatch();\n  const links = useSelector(selectAllLinks);\n  const categories = useSelector(selectCategories);\n\n  const [category, setCategory] = useState([]);\n\n  useEffect(() => {\n    dispatch(getAllLinks());\n  }, [dispatch]);\n\n  const selectCategory = (id) => {\n    let selectedCategory = id;\n    let newResults = [\"\"];\n    if (category.includes(selectedCategory)) {\n      newResults = category.filter((cat) => cat !== selectedCategory);\n      setCategory(newResults);\n    } else setCategory([...category, selectedCategory]);\n  };\n  console.log(category);\n\n  return (\n    <div>\n      {\" \"}\n      <Grid container>\n        <Grid item xs={2}>\n          <Toolbar selectCategory={selectCategory} />\n        </Grid>\n        <Grid item xs={10}>\n          {links\n            .filter((s) => {\n              if (category.length === 0) {\n                return true;\n              } else if (category.includes(s.categoryId)) {\n                return true;\n              } else return false;\n            })\n            .map((l) => {\n              return (\n                <LinkCard\n                  key={l.id}\n                  id={l.id}\n                  name={l.name}\n                  content={l.content}\n                />\n              );\n            })}\n        </Grid>\n      </Grid>\n      {categories.length === 0 ? (\n        <div>\n          <p>Please use toolbar on the left to add new links</p>\n        </div>\n      ) : (\n        <AddLink />\n      )}\n    </div>\n  );\n};\n\nexport default Links;\n","/Users/oliver/Development/group-project/developers-dashboard-client/src/store/links/actions.js",[],"/Users/oliver/Development/group-project/developers-dashboard-client/src/components/LinkCard.js",[],"/Users/oliver/Development/group-project/developers-dashboard-client/src/pages/Login.js",[],"/Users/oliver/Development/group-project/developers-dashboard-client/src/pages/Signup.js",[],"/Users/oliver/Development/group-project/developers-dashboard-client/src/components/SignupForm.js",[],"/Users/oliver/Development/group-project/developers-dashboard-client/src/components/Toolbar.js",[],"/Users/oliver/Development/group-project/developers-dashboard-client/src/components/AddCategory.js",[],"/Users/oliver/Development/group-project/developers-dashboard-client/src/store/categories/selectors.js",[],"/Users/oliver/Development/group-project/developers-dashboard-client/src/components/AddLink.js",["166"],"import React, { useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectCategories } from \"../store/categories/selectors\";\nimport { addLink } from \"../store/links/actions\";\n\nconst initialForm = {\n  category: \"\",\n  name: \"\",\n  content: \"\",\n};\n\nexport default function AddLink() {\n  const dispatch = useDispatch();\n  const categories = useSelector(selectCategories);\n  const [form, setForm] = useState(initialForm);\n  const selectCategoryRef = useRef();\n\n  function submitForm(e) {\n    e.preventDefault();\n    dispatch(addLink(form));\n    setForm(initialForm);\n    selectCategoryRef.current.value = \"\";\n  }\n\n  if (categories.length === 0) return null;\n\n  return (\n    <form onSubmit={submitForm}>\n      <div>\n        <label htmlFor=\"linkCategory\">Select a category</label>\n        <select\n          id=\"linkCategory\"\n          name=\"linkCategory\"\n          defaultValue=\"select\"\n          onChange={(e) => setForm({ ...form, category: e.target.value })}\n          required\n          ref={selectCategoryRef}\n        >\n          <option value=\"\">select</option>\n          {categories.map((category) => (\n            <option key={category.id} value={category.name}>\n              {category.name}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div>\n        <label htmlFor=\"linkName\">Give your link a name</label>\n        <input\n          id=\"linkName\"\n          name=\"linkName\"\n          value={form.name}\n          onChange={(e) => setForm({ ...form, name: e.target.value })}\n          placeholder=\"Link name\"\n          required\n        ></input>\n      </div>\n      <div>\n        <label htmlFor=\"linkContent\">Add a link</label>\n        <input\n          id=\"linkContent\"\n          name=\"linkContent\"\n          value={form.content}\n          onChange={(e) => setForm({ ...form, content: e.target.value })}\n          placeholder=\"Add a link\"\n          required\n        ></input>\n      </div>\n      <div>\n        <button type=\"submit\">Add</button>\n      </div>\n    </form>\n  );\n}\n","/Users/oliver/Development/group-project/developers-dashboard-client/src/components/AddSnippet.js",[],"/Users/oliver/Development/group-project/developers-dashboard-client/src/components/ClipBoard.js",[],"/Users/oliver/Development/group-project/developers-dashboard-client/src/utils/useCopyToClipboard.js",[],"/Users/oliver/Development/group-project/developers-dashboard-client/src/components/MessageBox.js",[],"/Users/oliver/Development/group-project/developers-dashboard-client/src/pages/Search.js",["167"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectAllSnippets } from \"../store/snippets/selectors\";\nimport { selectAllLinks } from \"../store/links/selectors\";\nimport LinkCard from \"../components/LinkCard\";\nimport CodeSnippetCard from \"../components/CodeSnippetCard\";\nimport { Grid, Paper, Typography } from \"@material-ui/core\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"20rem\",\n    backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n    display: \"flex\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n  },\n  textColor: { color: \"#FFFFFF\" },\n  renderMargin: { marginTop: \"1rem\" },\n}));\n\nexport default function Search() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const allSnippets = useSelector(selectAllSnippets);\n  const allLinks = useSelector(selectAllLinks);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState({\n    links: [],\n    snippets: [],\n  });\n\n  useEffect(() => {\n    const linkResults = allLinks.filter(\n      (link) =>\n        link.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        link.content.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    const snippetResults = allSnippets.filter(\n      (snippet) =>\n        snippet.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        snippet.content.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        snippet.comment.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n\n    setSearchResults({ links: linkResults, snippets: snippetResults });\n  }, [searchTerm, allLinks, allSnippets]);\n\n  return (\n    <Grid container>\n      <Grid\n        item\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n        <Grid item>\n          <Typography variant=\"h3\" className={classes.textColor}>\n            Search for some keywords in your archive\n          </Typography>\n        </Grid>{\" \"}\n        <Grid item>\n          <Paper elevation={2} className={classes.root}>\n            <InputBase\n              className={classes.input}\n              value={searchTerm}\n              placeholder=\"Search\"\n              onChange={(e) => setSearchTerm(e.target.value)}\n            />\n            <SearchIcon />\n          </Paper>\n        </Grid>{\" \"}\n      </Grid>\n      <Grid\n        item\n        container\n        direction=\"row\"\n        justify=\"space-evenly\"\n        alignItems=\"flex-start\"\n        style={{ marginTop: \"1.5rem\" }}\n      >\n        <Grid item>\n          {searchResults.links.length !== 0 && searchTerm && (\n            <div>\n              <Typography variant=\"h4\" className={classes.textColor}>\n                Link search results\n              </Typography>\n              <div>\n                {searchResults.links.map((link) => (\n                  <Grid item className={classes.renderMargin}>\n                    <LinkCard\n                      key={link.id}\n                      id={link.id}\n                      name={link.name}\n                      content={link.content}\n                    />\n                  </Grid>\n                ))}\n              </div>\n            </div>\n          )}\n        </Grid>\n        <Grid item>\n          {searchResults.snippets.length !== 0 && searchTerm && (\n            <div>\n              <Typography variant=\"h4\" className={classes.textColor}>\n                Snippet search results\n              </Typography>\n              <div>\n                {searchResults.snippets.map((snippet) => (\n                  <Grid item className={classes.renderMargin}>\n                    <CodeSnippetCard\n                      key={snippet.id}\n                      name={snippet.name}\n                      content={snippet.content}\n                      comment={snippet.comment}\n                      id={snippet.id}\n                    />\n                  </Grid>\n                ))}\n              </div>\n            </div>\n          )}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","/Users/oliver/Development/group-project/developers-dashboard-client/src/store/links/selectors.js",[],"/Users/oliver/Development/group-project/developers-dashboard-client/src/store/snippets/selectors.js",[],"/Users/oliver/Development/group-project/developers-dashboard-client/src/components/Message.js",[],"/Users/oliver/Development/group-project/developers-dashboard-client/src/store/appState/selectors.js",[],{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":8,"column":3,"nodeType":"174","messageId":"175","endLine":8,"endColumn":13},{"ruleId":"172","severity":1,"message":"176","line":30,"column":9,"nodeType":"174","messageId":"175","endLine":30,"endColumn":16},{"ruleId":"172","severity":1,"message":"177","line":5,"column":8,"nodeType":"174","messageId":"175","endLine":5,"endColumn":19},{"ruleId":"172","severity":1,"message":"178","line":11,"column":3,"nodeType":"174","messageId":"175","endLine":11,"endColumn":11},{"ruleId":"172","severity":1,"message":"179","line":7,"column":16,"nodeType":"174","messageId":"175","endLine":7,"endColumn":21},{"ruleId":"172","severity":1,"message":"180","line":4,"column":3,"nodeType":"174","messageId":"175","endLine":4,"endColumn":7},{"ruleId":"172","severity":1,"message":"181","line":5,"column":10,"nodeType":"174","messageId":"175","endLine":5,"endColumn":24},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],"no-unused-vars","'InputLabel' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'CardActions' is defined but never used.","'a11yDark' is defined but never used.","'Paper' is defined but never used.","'Grid' is defined but never used.","'getAllSnippets' is defined but never used.","no-global-assign","no-unsafe-negation"]